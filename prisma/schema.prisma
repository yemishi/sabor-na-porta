generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  phone     String   @unique
  name      String
  address   Address?
  isAdmin   Boolean?
  password  String?
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Product {
  id         String           @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  picture    String
  category   String
  variants   ProductVariant[]
  highlights String[]
  updatedAt  DateTime         @updatedAt
  createdAt  DateTime         @default(now())
}

model StoreSchedule {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  day       Int      @unique
  openTime  String
  closeTime String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  orderId       String
  address       Address
  user          OrderUser
  price         Float
  status        String         @default("pending")
  products      OrderProduct[]
  paymentMethod String
  shippingFee   Float?
  changeAmount  Float?
  createdAt     DateTime       @default(now())
}

type OrderUser {
  name   String
  phone  String
  userId String
}

type OrderProduct {
  id      String
  picture String
  qtd     Int
  name    String
  price   Float
  obs     String?
  addons  OrderProductAddons[]
}

type OrderProductAddons {
  title   String
  options AddOn[]
}

type Address {
  street       String
  neighborhood String
  houseNumber  String
  cep          String
  city         String  @default("Barra de santa rosa")
  ref          String?
  complement   String?
}

type ProductVariant {
  id        String
  name      String
  stock     Int          @default(0)
  price     Float
  desc      String?
  promotion Float?
  addons    AddOnGroup[]
}

type AddOn {
  name  String
  price Float
}

type AddOnGroup {
  title    String?
  type     SelectionType?
  required Boolean?
  options  AddOn[]
}

enum SelectionType {
  single
  multiple
}
